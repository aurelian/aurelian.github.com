---
id: 13
url: /archive/2006-03-25-medick-checkboxes
title: FormHelper::check_box
layout: archive
date: 2006-03-25 23:38:57.000000000 +01:00
next:
  url: /archive/2006-03-27-border-top-15px-solid-333.html
  title: ! 'border-top: 15px solid #333;'
prev:
  url: /archive/2006-03-24-php-vikinger-2006.html
  title: PHP Vikinger 2006

---

In "release 0.2.1":http://locknet.ro/archive/2006-03-19-medick-021-released.html of Medick, the _check_box_ control from _FormHelper_ was broken.

As a temporary fix, you have to explicitly check if the check_box was submitted or not in your controllers.

Let's see a small sample.

I will assume that we have an _article_ model with a _status_ defined as INT (1) in the database. This _status_ describes the _article_ state: _PUBLISHED_ or _DRAFT_.

The _article_ model

<pre>
class Article extends ActiveRecord {
    const PUBLISHED= 1;
    const DRAFT= 0;
    [...]
}
</pre>

On the _controller_ side, I will define 2 methods: _add_, witch will print the form for adding an _article_ and _create_ that will save the _article_ in the database.

<pre>
class ArticleController extends ApplicationController {
    // prints the form, and assign article template variable
    public function add() {
        $this->article = new Article();
    }
    // saves the article in the database
    public function create() {
        $this->article= new Article($this->request->getParameter('article'));
        // explicit check:
        if (!isset($this->params['article']['status'])) {
            // the check box is not checked, so we define the
            // default value for this case:
            $this->article->status= Article::DRAFT;
        } else {
            // checked check-box :)
            // default value for this case:
            $this->article->status= Article::PUBLISHED;
        }
        // do actions on article, like save and the redirect if succes or render
        // the form again if it`s a failure.
        [...]
    }
}
</pre>

In the _add_ view, we can use the _FormHelper_ to create the check box entry for us:

<pre>
[...]
&lt;?=FormHelper::check_box($article,'status');?&gt;
[...]
</pre>

translated in HTML:

<pre>
&lt;input type="checkbox" id="article_status" name="article[status]"  /&gt;
</pre>

As I said, this is just a temporary solution untill I will have another ideea.

This includes adding a hidden field with the same name on the form, or anything else that will do.

Why this checkbox is causing all this troubles?

Because if is not checked, the _article_ that we create at this line:

<pre>
$this->request->getParameter('article');
</pre>

will not receive the _status_ as a request parameter.

The real pain it will be when one will need more than a simple checkbox, and I'm thinking about a "use case":http://en.wikipedia.org/wiki/Use_case where an _article_ _has_many_ _categories_ and a checkbox control will be used for selecting in what _categories_ the _article_ fits.

While I mark this problem as fixed, I'm still open to improvements on how can I do this better.
